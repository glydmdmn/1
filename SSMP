# Scientific Software Management Plan

A Scientific Software Management Plan (SSMP) is a tool for researchers to help them plan a research project involving software as a part of research work. See this as a dynamic document you can work on an adapt over time as you work on the software. It is not a design document but more a document to clarify your thought and the consequences of different choices. If it helps you in your work you are free to use it in the future. If its just another layer of administrative work then think about why this is so and possible adapt or fully abandon the concept of a SSMP.

The texts in italic is inserted to provide guidance. Some parts may not be valid for your particular research and should then just be filled with "not relevant".

This plan is inspired by the following [Data Management Plan](https://healthsciences.ku.dk/research/responsible-conduct-of-research/SUND_Data_Management_Plan_Template_Final.docx/SUND_Data_Management_Plan_Template_Final.docx) and [Software Management Plan](https://doi.org/10.5281/zenodo.2159713)

# Overview

Project Title: Mechanical properties of PP

## Main researcher: 
*Researcher in charge of producing the code* Luyao Gao

## Research leader: 
*Closest researcher leader overseeing the researcher. Could be the main researcher.* Luyao Gao

## Collaborators: 
*Other researchers etc. that will have access and use the code* No collaborators

## Project contact: 
*Email of main researcher and research leader. Should also include name and contact for a person in-charge after the project ends if relevant* luyaog@mp.aau.dk

## Related document(s): 

Are there requirements and policies from funding agency, collaborators or institute when conducting the research? No related documents.

# Planning the project

## Purpose
*What is the purpose the scientific software? What scientific question are you trying to answer? What scientific methodology will be used?* The purpose is to use the scientific software to analyze the datas of the experiments.The scientific methodology will be used to calculate datas and create figures with the datas.

## Where will code exist during project?: 
*Can collaborators access code? How? Will there be backup?* The code will be saved on onedrive cloud or other cloud. It can call be stored in github that other collaborators can access and edit anytime.

## Software development: 
*How will the software be developed? Following a formal guideline or ad-hoc? Will you receive peer-review of code? How will you track bugs and issues? How do you ensure your results are trustworthy?* The software is following a formal guideline. And i will receive peer-review of code. I will check the issues when run the code and show error. And also my collabrators can check and find the issues. To make sure that my results are trustworthy, i always use different methods to calculate and verify if they get the same results.

## Programming languages:
*Which languages will you use and why? Will you automate using scripts? Will you use Integrated Development Environments? To which extend will your toolchain be available to others and will it be free of cost? Literate programming? Is platform dependencies an issue? Coding style?* I always use the programme language of R and Java and also C++, because these softwares are widely used to calculate in my region. The platform dependencies is not a issue, and publish literatures with the code is normally free.

## Methods: 
*Which statistical methods are used? To which extend do you need to develop your own methods? To which extend can you use off-the-shell methods?* The statistical methods are used to write literatures and analyze basic datas. I need to develop the methods with modify them with different language methods.

## Code Documentation: 
*How will the code be documented? A single README? Documentation level of individual functions and scripts? Will it be possible and useful to have automatic generation of documentation?* It will be documented as a single README. It will have individual functions and scripts and is useful to have automatic generation of documention.

## Testing: 
*How will the software be tested? Will there be automatic testing? What can be tested? Systematic or ad-hoc testing? Can we test intermediate results and how? Can you compare with similar software?* It can be automatic testing with the testing function. We can test intermediate results by run the code one by one, then the intermediate results can be shown.

## Validation: 
*To which extend is validation possible? From theory, do we know if some approaches are better/worse under a given metric and can we do the comparison?
Is it possible to simulate following a specific model where known theoretical bounds must apply? Is it possible to simplify the model (no noise, fewer parameters, etc.) into a model where the expected result is more clear? In general, how do you ensure your results are trustworthy?* I never use the software in some theoretical place. So i don't know how it works.

## Code and data: 
*How will code and data be structured in a filesystem? Are data too large to reside in e.g. a version control system? Are data so large it will reside on a different system, e.g. in a database server? Are there political, legal or ethical issues involved? What plan do you have for organization and naming ?* All the datas will be saved in one file even if the database is too large.

## Version control: 
*Manually or by a version control system? Which system and why?* A version control git system is good and simple for users and other collaborators to check and download the files.

# Processing data

##  Will you processing include randomness?: 
*Can your results be reproduced? Is it beneficial to save seed? Is it okay to approximately reproduce?* My results can be reproduced by saving with the code. But it is better not to be reproduced.

## Cleaning of data: 
*Is it necessary to pre-process data? Which methods are used? How are pre-processing documented? How do you ensure that the pre-processing is done in a transparent manner?* I don't think it is necessary to pre-processing. The data will be transparent and when it was edited it showed changed in files.

## Multiple steps?: 
*Is it necessary to perform several steps to obtain the results? Is it possible to automate via scripting?* It is not necessary to perform steps to obtain the results. The code will be automating calculate and analyze by scripts.

# Sharing
## Will you share your code? 
*If so, in which format? Binary/bytecode and/or source? Who are the intended users? What are knowledge and skills do potential users have? What level of support do you offer? How do users now the level of support? Contact information? How will you measure	the level of usage? Should users cite a publication?* I will share my code to others if it is necessary. But i will never share the initial datas and files to others, just share the code.

## Which publication channel? 
*Publisher: home university platform (AAU: e.g. vbn.aau.dk), publisher, or independent organization (e.g. figshare, github,...)? DOI? Link between article and code? Is the policies of digital repository acceptable? Is the longitude? Does the platform accommodate the size of you project? Fees?* The published paper will be submitted via the journal channel, depends on different journals. All papers can be found with DOI access.

## Who should have access and who will govern access?
*Should there be restricted access? Which criteria should be meet for sharing? Who will govern access after completion of project? Does the platform of choice allow for access governance?* There shouldn't be restricted access.

## Documentation 
*Is the paper/article sufficient documentation? Should dependencies to other programs and record and versions of these be documented? Is it documented how to produce every figure and statistics reported in the article? Should documentation include how-to-get-started? Example of how run all the program and scripts? Are examples useful?* The paper is sufficient documentation.It isn't documented how to produce the figures or the tables.

## Dataset documentation and publication: 
*Will you publish any dataset? Is it necessary to document the dataset? Does it make sense to adapt the FAIR principles for your data (benefits/)?:* I will not publish any dataset. It should be not versionable to public.

## Licensing 
*Should be clearly stated at the top of all relevant files. Right to copy? Right to modify? Right to distribute? Right to usage in proprietary and commercial software?* The software and files should meet all the rights and license.
